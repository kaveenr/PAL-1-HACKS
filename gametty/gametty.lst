ca65 V2.18 - N/A
Main file   : gametty.s
Current file: gametty.s

000000r 1               ; # # # # # # # # # # # # #
000000r 1               ; # Kaveen Rodrigo, 2022  #
000000r 1               ; # ukr.lk                #
000000r 1               ; # # # # # # # # # # # # #
000000r 1               
000000r 1               ; Abirahasa Game Interpreter
000000r 1               ; "Abirahasa" - Mystery in Sinhala
000000r 1               
000000r 1               ; Functionality Of Game Engine
000000r 1               ; Scene
000000r 1               ;   - Has Text Content
000000r 1               ;   - Can Go Four Directions
000000r 1               ;   - Can backtrack flag
000000r 1               ;   - 8 Unqiue Item Pickup
000000r 1               ;   - Reusuable scenarios
000000r 1               
000000r 1               ; Game State            Supported Verbs
000000r 1               ;   - Previous Scene        - GO
000000r 1               ;   - Current Scene         - TAKE
000000r 1               ;   - Pickups               - USE
000000r 1               ;
000000r 1               
000000r 1                   .setcpu "6502"
000000r 1               
000000r 1               ;
000000r 1               ; Constants
000000r 1               ;
000000r 1               
000000r 1               ; KIM-1 Rom Routine Addresses
000000r 1               
000000r 1                   kOUTCH  =   $1EA0
000000r 1                   kGETCH  =   $1E5A
000000r 1                   kRST    =   $1C22
000000r 1               
000000r 1               ; Zero Page Variables
000000r 1               
000000r 1                   SAVEA   =   $01
000000r 1                   SAVEX   =   $02
000000r 1                   SAVEY   =   $03
000000r 1               
000000r 1                   PRINTP  =   $04         ; 2 byte print pointer
000000r 1                   PRINTE  =   $06         ; 2 byte of print end
000000r 1                   CVERB   =   $08         ; 1 byte selected verb
000000r 1                   CNOUN   =   $09         ; 1 byte selected noun
000000r 1                   INWORD  =   $0A         ; String Input Buffer
000000r 1               
000000r 1                   ; Game State Variables
000000r 1               
000000r 1                   GAMEP   =   $30         ; 2 byte game pointer
000000r 1                   GCADD   =   $34         ; GO Adress Common High byte
000000r 1                   GNADD   =   $35         ; GO Adress North Low byte
000000r 1                   GEADD   =   $36         ; GO Adress East Low byte
000000r 1                   GSADD   =   $37         ; GO Adress South Low byte
000000r 1                   GWADD   =   $38         ; GO Adress West Low byte
000000r 1                   DESCR   =   $39         ; 2 byte address of description
000000r 1               
000000r 1               
000000r 1               ; ASCII Constants
000000r 1               
000000r 1                   CR      =   $0D         ; Carriage Return
000000r 1                   LF      =   $0A         ; Line Feed
000000r 1                   SP      =   $20         ; Space
000000r 1               
000000r 1               ;
000000r 1               ; Program Entrypoint
000000r 1               ;
000000r 1               
000000r 1                   .org    $0200
000200  1               
000200  1  A2 2E        init:       ldx #<s_hello   ; Show Welcome Message
000202  1  A0 03                    ldy #>s_hello
000204  1  20 E2 03                 jsr PutStr
000207  1  A9 14                    lda #<game      ; Set Game Scene Pointer
000209  1  85 30                    sta GAMEP
00020B  1  A9 04                    lda #>game
00020D  1  85 31                    sta GAMEP+1
00020F  1               
00020F  1  A0 00        describe:   ldy #0          ; Loading GO Pointers
000211  1  B1 30        @loop:      lda (GAMEP), y
000213  1  C0 00                    cpy #0
000215  1  D0 05                    bne @match_n
000217  1  85 34                    sta GCADD
000219  1  4C 52 02                 jmp @next
00021C  1  C0 01        @match_n:   cpy #1
00021E  1  D0 05                    bne @match_e
000220  1  85 35                    sta GNADD
000222  1  4C 52 02                 jmp @next
000225  1  C0 02        @match_e:   cpy #2
000227  1  D0 05                    bne @match_s
000229  1  85 36                    sta GEADD
00022B  1  4C 52 02                 jmp @next
00022E  1  C0 03        @match_s:   cpy #3
000230  1  D0 05                    bne @match_w
000232  1  85 37                    sta GSADD
000234  1  4C 52 02                 jmp @next
000237  1  C0 04        @match_w:   cpy #4
000239  1  D0 05                    bne @match_dh
00023B  1  85 38                    sta GWADD
00023D  1  4C 52 02                 jmp @next
000240  1  C0 05        @match_dh:  cpy #5
000242  1  D0 05                    bne @match_dl
000244  1  85 39                    sta DESCR
000246  1  4C 52 02                 jmp @next
000249  1  C0 06        @match_dl:  cpy #6
00024B  1  D0 09                    bne @endloop
00024D  1  85 3A                    sta DESCR+1
00024F  1  4C 56 02                 jmp @endloop
000252  1  C8           @next:      iny
000253  1  4C 11 02                 jmp @loop
000256  1               
000256  1  20 C1 03     @endloop:   jsr PutCRLF ; Print Description
000259  1  A6 39                    ldx DESCR
00025B  1  A4 3A                    ldy DESCR+1
00025D  1  20 E2 03                 jsr PutStr
000260  1               
000260  1                           ; Prompt Verb
000260  1                           ; Store Valid Verb First Char to CVERB
000260  1               
000260  1  20 C1 03     prompt:     jsr PutCRLF
000263  1  A2 67                    ldx #<s_prompt
000265  1  A0 03                    ldy #>s_prompt
000267  1  20 E2 03                 jsr PutStr
00026A  1               
00026A  1  20 F4 03                 jsr GetWord     ; Get Word
00026D  1  A5 0A                    lda INWORD
00026F  1               
00026F  1  C9 47                    cmp #'G'        ; Check if valid verb
000271  1  F0 1C                    beq @store
000273  1  C9 54                    cmp #'T'
000275  1  F0 18                    beq @store
000277  1  C9 55                    cmp #'U'
000279  1  F0 14                    beq @store
00027B  1               
00027B  1  20 C1 03     @failed:    jsr PutCRLF     ; Notify Bad Verb
00027E  1               
00027E  1  A2 0A                    ldx #<INWORD
000280  1  A0 00                    ldy #>INWORD
000282  1  20 E2 03                 jsr PutStr
000285  1               
000285  1  A2 6B                    ldx #<s_err1
000287  1  A0 03                    ldy #>s_err1
000289  1  20 E2 03                 jsr PutStr
00028C  1               
00028C  1  4C 60 02                 jmp prompt      ; Return To Prompt
00028F  1               
00028F  1  A5 0A        @store:     lda INWORD      ; Store first char of verb
000291  1  85 08                    sta CVERB
000293  1               
000293  1                           ; Prompt Noun
000293  1                           ; Store Noun First Char to CNOUN
000293  1               
000293  1  20 F4 03     prompt_n:   jsr GetWord     ; Get Word
000296  1  A5 0A                    lda INWORD
000298  1  85 09                    sta CNOUN
00029A  1               
00029A  1  20 C1 03                 jsr PutCRLF
00029D  1               
00029D  1                           ; Switch Based On Noun
00029D  1               
00029D  1  A5 08                    lda CVERB
00029F  1  C9 47                    cmp #'G'
0002A1  1  F0 11                    beq handle_g
0002A3  1  C9 54                    cmp #'T'
0002A5  1  F0 65                    beq handle_t
0002A7  1  C9 55                    cmp #'U'
0002A9  1  F0 00                    beq @go_u
0002AB  1               
0002AB  1  4C 1D 03     @go_u:      jmp handle_u
0002AE  1               
0002AE  1  20 C1 03     hault:      jsr PutCRLF
0002B1  1  4C 22 1C                 jmp kRST
0002B4  1               
0002B4  1                           ;
0002B4  1                           ; Handle Go
0002B4  1                           ;
0002B4  1               
0002B4  1  A6 09        handle_g:   ldx CNOUN
0002B6  1  E0 4E                    cpx #'N'
0002B8  1  D0 05                    bne @match_e
0002BA  1  A5 35                    lda GNADD
0002BC  1  4C EB 02                 jmp @validnoun
0002BF  1  E0 45        @match_e:   cpx #'E'
0002C1  1  D0 05                    bne @match_s
0002C3  1  A5 36                    lda GEADD
0002C5  1  4C EB 02                 jmp @validnoun
0002C8  1  E0 53        @match_s:   cpx #'S'
0002CA  1  D0 05                    bne @match_w
0002CC  1  A5 37                    lda GSADD
0002CE  1  4C EB 02                 jmp @validnoun
0002D1  1  E0 57        @match_w:   cpx #'W'
0002D3  1  D0 05                    bne @fail
0002D5  1  A5 38                    lda GWADD
0002D7  1  4C EB 02                 jmp @validnoun
0002DA  1               
0002DA  1  A2 0A        @fail:      ldx #<INWORD    ; Verbose Wrong Noun
0002DC  1  A0 00                    ldy #>INWORD
0002DE  1  20 E2 03                 jsr PutStr
0002E1  1  A2 80                    ldx #<s_err2
0002E3  1  A0 03                    ldy #>s_err2
0002E5  1  20 E2 03                 jsr PutStr
0002E8  1  4C 60 02                 jmp prompt
0002EB  1               
0002EB  1  C9 00        @validnoun: cmp #0          ; Check if allowed
0002ED  1  D0 14                    bne @valid
0002EF  1               
0002EF  1  20 C1 03                 jsr PutCRLF     ; Show invalid choice
0002F2  1  A2 AB                    ldx #<s_err3
0002F4  1  A0 03                    ldy #>s_err3
0002F6  1  20 E2 03                 jsr PutStr
0002F9  1  A2 0A                    ldx #<INWORD
0002FB  1  A0 00                    ldy #>INWORD
0002FD  1  20 E2 03                 jsr PutStr
000300  1  4C 60 02                 jmp prompt
000303  1               
000303  1  85 30        @valid:     sta GAMEP
000305  1  A5 34                    lda GCADD
000307  1  85 31                    sta GAMEP+1
000309  1               
000309  1  4C 0F 02                 jmp describe
00030C  1               
00030C  1                           ; Handle Take
00030C  1               
00030C  1  A2 9C        handle_t:   ldx #<s_verb2
00030E  1  A0 03                    ldy #>s_verb2
000310  1  20 E2 03                 jsr PutStr
000313  1  A2 0A                    ldx #<INWORD
000315  1  A0 00                    ldy #>INWORD
000317  1  20 E2 03                 jsr PutStr
00031A  1  4C 60 02                 jmp prompt
00031D  1               
00031D  1                           ;
00031D  1                           ; Handle Use
00031D  1                           ;
00031D  1               
00031D  1  A2 A4        handle_u:   ldx #<s_verb3
00031F  1  A0 03                    ldy #>s_verb3
000321  1  20 E2 03                 jsr PutStr
000324  1  A2 0A                    ldx #<INWORD
000326  1  A0 00                    ldy #>INWORD
000328  1  20 E2 03                 jsr PutStr
00032B  1  4C 60 02                 jmp prompt
00032E  1               
00032E  1               ;
00032E  1               ; String/Char Constants
00032E  1               ;
00032E  1               
00032E  1  0D 0A 41 62  s_hello:    .byte CR,LF,"Abirahasa Game Interpreter"
000332  1  69 72 61 68  
000336  1  61 73 61 20  
00034A  1  0D 0A 62 79              .byte CR,LF,"by Kaveen Rodrigo (2022)",CR,LF,0
00034E  1  20 4B 61 76  
000352  1  65 65 6E 20  
000367  1  0D 0A 3E 00  s_prompt:   .byte CR,LF,">",0
00036B  1  20 69 73 20  s_err1:     .byte " is not a valid verb",0
00036F  1  6E 6F 74 20  
000373  1  61 20 76 61  
000380  1  20 69 73 20  s_err2:     .byte " is not a valid noun",0
000384  1  6E 6F 74 20  
000388  1  61 20 76 61  
000395  1  47 6F 69 6E  s_verb1:    .byte "Going ",0
000399  1  67 20 00     
00039C  1  54 61 6B 69  s_verb2:    .byte "Taking ",0
0003A0  1  6E 67 20 00  
0003A4  1  55 73 69 6E  s_verb3:    .byte "Using ",0
0003A8  1  67 20 00     
0003AB  1  43 61 6E 27  s_err3:     .byte "Can't Go ",0
0003AF  1  74 20 47 6F  
0003B3  1  20 00        
0003B5  1               
0003B5  1               ;
0003B5  1               ; TTY IO Routines
0003B5  1               ;
0003B5  1               
0003B5  1  85 01        PutChar:    sta SAVEA
0003B7  1  84 03                    sty SAVEY
0003B9  1  20 A0 1E                 jsr kOUTCH
0003BC  1  A4 03                    ldy SAVEY
0003BE  1  A5 01                    lda SAVEA
0003C0  1  60                       rts
0003C1  1               
0003C1  1  85 01        PutCRLF:    sta SAVEA
0003C3  1  A9 0D                    lda #CR
0003C5  1  20 B5 03                 jsr PutChar
0003C8  1  A9 0A                    lda #LF
0003CA  1  20 B5 03                 jsr PutChar
0003CD  1  A5 01                    lda SAVEA
0003CF  1  60                       rts
0003D0  1               
0003D0  1  84 03        PutPtrSTR:  sty SAVEY
0003D2  1  A0 00                    ldy #0
0003D4  1  B1 04        @loop:      lda (PRINTP), y
0003D6  1  F0 07                    beq @stop
0003D8  1  20 B5 03                 jsr PutChar
0003DB  1  C8                       iny
0003DC  1  4C D4 03                 jmp @loop
0003DF  1  A4 03        @stop:      ldy SAVEY
0003E1  1  60                       rts
0003E2  1               
0003E2  1  8A           PutStr:     txa
0003E3  1  85 04                    sta PRINTP
0003E5  1  98                       tya
0003E6  1  85 05                    sta PRINTP+1
0003E8  1  20 D0 03                 jsr PutPtrSTR
0003EB  1  60                       rts
0003EC  1               
0003EC  1  84 03        GetChar:    sty SAVEY
0003EE  1  20 5A 1E                 jsr kGETCH
0003F1  1  A4 03                    ldy SAVEY
0003F3  1  60                       rts
0003F4  1               
0003F4  1  86 02        GetWord:    stx SAVEX
0003F6  1  85 01                    sta SAVEA
0003F8  1  A2 00                    ldx #0
0003FA  1  20 EC 03     @loop:      jsr GetChar
0003FD  1  C9 20                    cmp #SP
0003FF  1  F0 0A                    beq @stop
000401  1  C9 0D                    cmp #CR
000403  1  F0 06                    beq @stop
000405  1  95 0A                    sta INWORD,X
000407  1  E8                       inx
000408  1  4C FA 03                 jmp @loop
00040B  1  A9 00        @stop:      lda #0
00040D  1  95 0A                    sta INWORD,X
00040F  1  A6 02                    ldx SAVEX
000411  1  A5 01                    lda SAVEA
000413  1  60                       rts
000414  1               
000414  1               ;
000414  1               ; Game Data
000414  1               ;
000414  1               
000414  1  04 1B 00 00  game:       .byte >@1,<@1,0,0,0,<@t1,>@t1
000418  1  00 29 04     
00041B  1  04 00 00 00  @1:         .byte >@2,0,0,0,<@2,<@t2,>@t2
00041F  1  22 B0 04     
000422  1  00 00 00 00  @2:         .byte 0,0,0,0,0,<@t3,>@t3
000426  1  00 4A 05     
000429  1               
000429  1  59 6F 75 27  @t1:        .byte "You're at the side of an empty road, north of you is a foot path..."
00042D  1  72 65 20 61  
000431  1  74 20 74 68  
00046C  1  0D 0A 54 68              .byte CR,LF,"There is a sign that says 'Welcome To Abirahasa' next to the path",0
000470  1  65 72 65 20  
000474  1  69 73 20 61  
0004B0  1  59 6F 75 20  @t2:        .byte "You walk along, to find a clearing with an old house, it looks uninhabited."
0004B4  1  77 61 6C 6B  
0004B8  1  20 61 6C 6F  
0004FB  1  0D 0A 53 68              .byte CR,LF,"Shaking the door knob reveal that it's locked. Off to the left is an garage.",0
0004FF  1  61 6B 69 6E  
000503  1  67 20 74 68  
00054A  1  59 6F 75 20  @t3:        .byte "You walk into the garage to see an old Volkswagen Karmann Ghia covered in dust."
00054E  1  77 61 6C 6B  
000552  1  20 69 6E 74  
000599  1  0D 0A 41 74              .byte CR,LF,"At the back is a bench with miscellaneous car parts and old computers."
00059D  1  20 74 68 65  
0005A1  1  20 62 61 63  
0005E1  1  0D 0A 59 6F              .byte CR,LF,"You go closer to see a jar full of bolts and shining in it is a key!",0
0005E5  1  75 20 67 6F  
0005E9  1  20 63 6C 6F  
000627  1               
